name: Test Suite

on:
  pull_request:
    branches: [ main, dev, dev_trending_projects ]
  push:
    branches: [ main, dev, dev_trending_projects ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      CI: true
      GOOGLE_PRIVATE_KEY: eyJjbGllbnRfZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIn0=
      GOOGLE_CLOUD_BUCKET: dummy-bucket
      WEBHOOK_SECRET: dummy
      REPLICATE_API_TOKEN: dummy
      GEMINI_API_KEY: dummy
      NEXT_PUBLIC_POSTHOG_KEY: dummy
      NEXT_PUBLIC_POSTHOG_HOST: https://us.i.posthog.com
      SITE_URL: https://example.com

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run tests
      run: npm run test:ci

    - name: Build application
      run: npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: npx audit-ci --moderate
